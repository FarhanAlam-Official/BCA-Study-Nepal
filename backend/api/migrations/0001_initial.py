# Generated by Django 5.1.3 on 2025-01-18 06:34

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('time', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('SEMINAR', 'Seminar'), ('WORKSHOP', 'Workshop'), ('COMPETITION', 'Competition'), ('WEBINAR', 'Webinar')], max_length=50)),
                ('description', models.TextField()),
                ('speaker', models.CharField(blank=True, max_length=255, null=True)),
                ('registration', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Events',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('duration_years', models.PositiveIntegerField(default=4)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('established_year', models.PositiveIntegerField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('address_line1', models.CharField(blank=True, default='', max_length=255)),
                ('address_line2', models.CharField(blank=True, default='', max_length=255)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('state', models.CharField(blank=True, default='', max_length=100)),
                ('postal_code', models.CharField(blank=True, default='', max_length=10)),
                ('contact_primary', models.CharField(blank=True, default='', max_length=100)),
                ('contact_secondary', models.CharField(blank=True, default='', max_length=100)),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('website', models.URLField(blank=True)),
                ('affiliation', models.CharField(max_length=255)),
                ('accreditation', models.CharField(blank=True, default='', max_length=255)),
                ('institution_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('community', 'Community')], default='private', max_length=50)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_students', models.PositiveIntegerField(blank=True, null=True)),
                ('student_teacher_ratio', models.CharField(blank=True, default='', max_length=20)),
                ('placement_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('facilities', models.JSONField(blank=True, default=list)),
                ('courses_offered', models.JSONField(blank=True, default=list)),
                ('specializations', models.JSONField(blank=True, default=list)),
                ('logo', models.URLField(blank=True)),
                ('image', models.URLField()),
                ('gallery_images', models.JSONField(blank=True, default=list)),
                ('virtual_tour_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True, default='')),
                ('achievements', models.JSONField(blank=True, default=list)),
                ('notable_alumni', models.JSONField(blank=True, default=list)),
                ('scholarships_available', models.BooleanField(default=False)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Colleges',
                'ordering': ['-rating', 'name'],
                'indexes': [models.Index(fields=['slug'], name='api_college_slug_07a081_idx'), models.Index(fields=['is_featured'], name='api_college_is_feat_6abe1f_idx'), models.Index(fields=['rating'], name='api_college_rating_2e7987_idx')],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('semester', models.IntegerField(choices=[(1, '1st Semester'), (2, '2nd Semester'), (3, '3rd Semester'), (4, '4th Semester'), (5, '5th Semester'), (6, '6th Semester'), (7, '7th Semester'), (8, '8th Semester')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(help_text='Upload PDF files only', upload_to='notes/%Y/%m/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Verify if the note content is appropriate')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notes',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('semester', models.IntegerField(choices=[(1, '1st Semester'), (2, '2nd Semester'), (3, '3rd Semester'), (4, '4th Semester'), (5, '5th Semester'), (6, '6th Semester'), (7, '7th Semester'), (8, '8th Semester')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('credit_hours', models.PositiveIntegerField(default=3)),
                ('is_active', models.BooleanField(default=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='api.program')),
            ],
            options={
                'unique_together': {('code', 'program', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='QuestionPaper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.IntegerField(help_text='Year of examination', validators=[django.core.validators.MinValueValidator(2000)])),
                ('semester', models.IntegerField(choices=[(1, '1st Semester'), (2, '2nd Semester'), (3, '3rd Semester'), (4, '4th Semester'), (5, '5th Semester'), (6, '6th Semester'), (7, '7th Semester'), (8, '8th Semester')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('file', models.FileField(help_text='Upload PDF files only', upload_to='question_papers/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('status', models.CharField(choices=[('PENDING', 'Pending Verification'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_date', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_papers', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_papers', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_papers', to='api.subject')),
            ],
            options={
                'verbose_name_plural': 'Question Papers',
                'ordering': ['-year', 'semester'],
                'indexes': [models.Index(fields=['year', 'semester'], name='api_questio_year_04644b_idx'), models.Index(fields=['status'], name='api_questio_status_b670f7_idx')],
                'unique_together': {('subject', 'year', 'semester')},
            },
        ),
    ]
